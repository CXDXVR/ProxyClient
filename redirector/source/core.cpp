#include "global.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Core::Core(_In_ HMODULE instance, _In_ WinPipe::WinHandle& stopEvent) :
	m_Instance{ instance },
	m_StopEvent{ stopEvent },
	m_Config{ std::make_unique<ConfigManager>(this, m_StopEvent) }
{
	if (!SocketHook::Initialize())
		spdlog::error("Failed to initialize SocketHook.");
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Core::~Core()
{
	SetEvent(m_StopEvent.get());
	SocketHook::Uninitialize();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Core::Wait()
{
	WaitForSingleObject(m_StopEvent.get(), INFINITE);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Core::Notify(AbstractComponent* component, Event event)
{
	if			(event == Event::UpdateConfig)	SocketHook::UpdateConfig(m_Config->GetConfig(), m_StopEvent);
	else if (event == Event::StopEvent)			SetEvent(m_StopEvent.get());
}
